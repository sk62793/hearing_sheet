{"ast":null,"code":"var _jsxFileName = \"/Users/sk62793/src/hearing_sheet/hearing-sheet/src/components/Form/Form.jsx\";\nimport React, { Component } from 'react';\nimport { compose } from 'redux';\nimport { reduxForm, Field, FieldArray, formValueSelector } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport Input from '@material-ui/core/Input';\nimport lightGreen from '@material-ui/core/colors/lightGreen';\nimport { FormHelperText } from '@material-ui/core';\nimport { FormControl, MenuItem } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport { readForm } from '../actions';\nimport firebase, { db } from '../../Firebase';\n\nconst styles = theme => ({\n  container: {\n    margin: '0 auto',\n    backgroundColor: lightGreen[50],\n    padding: '2rem 0',\n    width: '100%'\n  },\n  form: {\n    width: '90%',\n    maxWidth: '64rem',\n    display: 'flex',\n    flexDirection: 'column',\n    padding: '0',\n    margin: '0 auto'\n  },\n  contents: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  head: {\n    border: '.1rem solid #eee',\n    backgroundColor: '#fff',\n    borderRadius: '.8rem',\n    padding: '2.2rem 2.2rem 2.4rem'\n  },\n  title: {\n    fontSize: '3.2rem',\n    fontWeight: '500',\n    margin: '.1rem 0'\n  },\n  greed: {\n    fontSize: '1.2rem',\n    marginTop: '1.2rem'\n  },\n  content: {\n    padding: '2.4rem',\n    border: '.1rem solid #eee',\n    borderRadius: '.8rem',\n    backgroundColor: '#fff',\n    margin: '1rem auto',\n    fontSize: '1.6rem'\n  },\n  button: {\n    backgroundColor: '#fff',\n    padding: ' 1rem 2rem',\n    fontSize: '1.4rem'\n  }\n});\n\nconst renderTitleField = withStyles(theme => ({\n  form: {\n    width: '100%',\n    height: '6rem',\n    marginTop: '1.6rem'\n  },\n  title: {\n    fontSize: '3.2rem'\n  }\n}))(({\n  input,\n  meta: {\n    touched,\n    error\n  },\n  type = 'text',\n  classes,\n  required = false\n}) => React.createElement(FormControl, {\n  className: classes.form,\n  required: required,\n  error: !!(touched && error),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 91\n  },\n  __self: this\n}, React.createElement(TextField, Object.assign({\n  className: classes.title,\n  error: !!(touched && error),\n  type: type,\n  required: required\n}, input, {\n  helperText: touched && error //            disableUnderline='true'\n  ,\n  InputProps: {\n    classes: {\n      input: classes.title\n    }\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 96\n  },\n  __self: this\n}))));\n\nconst renderInput = ({\n  input,\n  label,\n  name,\n  meta: {\n    touched,\n    error\n  },\n  type = 'text',\n  required = false,\n  rootClass = ''\n}) => React.createElement(FormControl, {\n  classes: {\n    root: rootClass\n  },\n  required: required,\n  error: !!(touched && error),\n  style: {\n    width: '100%',\n    height: '4rem',\n    marginTop: '1.6rem'\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 123\n  },\n  __self: this\n}, React.createElement(Input, Object.assign({\n  style: {\n    fontSize: '1.4rem'\n  },\n  placeholder: label,\n  label: label,\n  name: name,\n  type: type\n}, input, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 133\n  },\n  __self: this\n})), touched && error && React.createElement(FormHelperText, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 143\n  },\n  __self: this\n}, error));\n\nconst renderInputDisabled = ({\n  input,\n  label,\n  name,\n  meta: {\n    touched,\n    error\n  },\n  type = 'text',\n  required = false,\n  rootClass = ''\n}) => React.createElement(FormControl, {\n  classes: {\n    root: rootClass\n  },\n  required: required,\n  error: !!(touched && error),\n  style: {\n    width: '100%',\n    height: '4rem',\n    marginTop: '1.6rem'\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 156\n  },\n  __self: this\n}, React.createElement(Input, Object.assign({\n  style: {\n    fontSize: '1.4rem'\n  },\n  disabled: true,\n  name: name,\n  placeholder: label,\n  label: label,\n  type: type\n}, input, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 166\n  },\n  __self: this\n})), touched && error && React.createElement(FormHelperText, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 177\n  },\n  __self: this\n}, error));\n\nconst renderChoices = withStyles(theme => ({\n  choices: {\n    listStyle: 'none',\n    display: 'flex'\n  }\n}))(({\n  classes,\n  fields,\n  meta: {\n    error\n  }\n}) => React.createElement(\"ul\", {\n  style: {\n    width: '100%',\n    padding: '0'\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 192\n  },\n  __self: this\n}, React.createElement(\"li\", {\n  style: {\n    listStyle: 'none'\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 193\n  },\n  __self: this\n}, React.createElement(Button, {\n  className: classes.button,\n  variant: \"outlined\",\n  color: \"primary\",\n  onClick: () => fields.push(),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 194\n  },\n  __self: this\n}, \"\\u8FFD\\u52A0\")), fields.map((name, index) => React.createElement(\"li\", {\n  key: index,\n  className: classes.choices,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 204\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  style: {\n    lineHeight: '4rem',\n    margin: '1.2rem 1rem 0 0'\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 205\n  },\n  __self: this\n}, \"\\u25CB\"), React.createElement(Field, {\n  name: name,\n  type: \"text\",\n  component: renderInput,\n  label: `Choice #${index + 1}`,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 206\n  },\n  __self: this\n}), React.createElement(Button, {\n  className: classes.button,\n  style: {\n    margin: '1rem .5rem'\n  },\n  variant: \"outlined\",\n  color: \"primary\",\n  onClick: () => fields.remove(index),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 212\n  },\n  __self: this\n}, \"\\u524A\\u9664\"))), error && React.createElement(\"li\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 223\n  },\n  __self: this\n}, error)));\nconst renderRadioQuery = withStyles(theme => ({\n  content: {\n    padding: '2.4rem',\n    border: '.1rem solid #eee',\n    borderRadius: '.8rem',\n    backgroundColor: '#fff',\n    margin: '1rem auto',\n    fontSize: '1.6rem',\n    width: 'calc(100% - 4.8rem)'\n  },\n  choices: {\n    display: 'flex'\n  }\n}))(({\n  classes,\n  rootClass = '',\n  index\n}) => React.createElement(FormControl, {\n  classs: {\n    root: rootClass\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 247\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: classes.content,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 248\n  },\n  __self: this\n}, React.createElement(Field, {\n  component: renderInput,\n  name: `createForm.${index}.question`,\n  label: \"\\u8CEA\\u554F\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 249\n  },\n  __self: this\n}), React.createElement(FieldArray, {\n  name: `createForm.${index}.choices`,\n  component: renderChoices,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 254\n  },\n  __self: this\n}))));\nconst renderTextQuery = withStyles(theme => ({\n  content: {\n    padding: '2.4rem',\n    border: '.1rem solid #eee',\n    borderRadius: '.8rem',\n    backgroundColor: '#fff',\n    margin: '1rem auto',\n    fontSize: '1.6rem',\n    width: 'calc(100% - 4.8rem)'\n  }\n}))(({\n  classes,\n  rootClass = '',\n  index\n}) => React.createElement(FormControl, {\n  classes: {\n    root: rootClass\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 276\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: classes.content,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 277\n  },\n  __self: this\n}, React.createElement(Field, {\n  component: renderInput,\n  name: `createForm.${index}.question`,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 278\n  },\n  __self: this\n}), React.createElement(Field, {\n  component: renderInputDisabled,\n  name: `createForm.${index}.answer`,\n  label: `回答(記述式)`,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 282\n  },\n  __self: this\n}))));\n\nconst renderTypeSelect = ({\n  input: {\n    value,\n    onChange\n  },\n  label,\n  children,\n  meta: {\n    touched,\n    error\n  },\n  onFieldChange,\n  required = false,\n  rootClass = ''\n}) => React.createElement(TextField, {\n  required: required,\n  classes: {\n    root: rootClass\n  },\n  select: true,\n  label: label,\n  variant: \"outlined\",\n  value: value,\n  onChange: e => {\n    onChange(e.target.value);\n    onFieldChange && onFieldChange(e.target.value);\n  },\n  helperText: touched && error,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 301\n  },\n  __self: this\n}, children);\n\nconst renderQuery = withStyles(theme => ({\n  content: {\n    padding: '2.4rem',\n    border: '.1rem solid #eee',\n    borderRadius: '.8rem',\n    backgroundColor: '#fff',\n    margin: '1rem auto',\n    fontSize: '1.6rem',\n    width: 'calc(100% - 4.8rem)'\n  }\n}))(({\n  fields,\n  classes,\n  rootClass = '',\n  createFormValue\n}) => React.createElement(FormControl, {\n  classes: {\n    root: rootClass\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 335\n  },\n  __self: this\n}, fields.map((name, index) => {\n  return React.createElement(\"div\", {\n    key: index,\n    className: classes.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: `createForm.${index}.type`,\n    component: renderTypeSelect,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340\n    },\n    __self: this\n  }, \"\\u672A\\u9078\\u629E\"), React.createElement(MenuItem, {\n    value: \"text_query\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341\n    },\n    __self: this\n  }, \"\\u30C6\\u30AD\\u30B9\\u30C8\"), React.createElement(MenuItem, {\n    value: \"radio_query\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342\n    },\n    __self: this\n  }, \"\\u30E9\\u30B8\\u30AA\")), createFormValue[index].type === 'text_query' && React.createElement(Field, {\n    name: `createForm.${index}.question`,\n    index: index,\n    component: renderTextQuery,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345\n    },\n    __self: this\n  }), createFormValue[index].type === 'radio_query' && React.createElement(Field, {\n    name: `createForm.${index}.question`,\n    index: index,\n    component: renderRadioQuery,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: () => fields.remove(index),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350\n    },\n    __self: this\n  }, \"\\u524A\\u9664\"));\n}), React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 354\n  },\n  __self: this\n}, React.createElement(Button, {\n  variant: \"outlined\",\n  color: \"primary\",\n  style: {\n    backgroundColor: '#fff'\n  },\n  onClick: () => fields.push({}),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 355\n  },\n  __self: this\n}, \"\\u8CEA\\u554F\\u3092\\u8FFD\\u52A0\"))));\n\nclass CreateFormValuesForm extends Component {\n  render() {\n    console.log(this.props.values);\n    const {\n      classes,\n      fields,\n      handleSubmit,\n      createFormValue\n    } = this.props;\n    return React.createElement(\"div\", {\n      className: classes.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.form,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: classes.contents,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.head,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376\n      },\n      __self: this\n    }, React.createElement(Field, {\n      label: \"\\u30BF\\u30A4\\u30C8\\u30EB\",\n      name: \"title\",\n      type: \"text\",\n      component: renderTitleField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377\n      },\n      __self: this\n    })), React.createElement(Link, {\n      to: \"/create_form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379\n      },\n      __self: this\n    }, \"\\u623B\\u308B\"))));\n  }\n\n}\n\nCreateFormValuesForm = reduxForm({\n  form: 'createFormValues'\n})(CreateFormValuesForm);\nconst selector = formValueSelector('createFormValues');\nCreateFormValuesForm = connect(state => {\n  const createFormValue = selector(state, 'createForm');\n  return {\n    createFormValue\n  };\n})(CreateFormValuesForm);\n\nconst mapStateToProps = state => ({\n  values: state.values\n});\n\nconst mapDispatchToProps = {\n  readForm\n};\nexport default compose(withStyles(styles), connect(mapStateToProps, mapDispatchToProps))(CreateFormValuesForm);","map":{"version":3,"sources":["/Users/sk62793/src/hearing_sheet/hearing-sheet/src/components/Form/Form.jsx"],"names":["React","Component","compose","reduxForm","Field","FieldArray","formValueSelector","connect","Link","withStyles","TextField","Input","lightGreen","FormHelperText","FormControl","MenuItem","Button","readForm","firebase","db","styles","theme","container","margin","backgroundColor","padding","width","form","maxWidth","display","flexDirection","contents","head","border","borderRadius","title","fontSize","fontWeight","greed","marginTop","content","button","renderTitleField","height","input","meta","touched","error","type","classes","required","renderInput","label","name","rootClass","root","renderInputDisabled","renderChoices","choices","listStyle","fields","push","map","index","lineHeight","remove","renderRadioQuery","renderTextQuery","renderTypeSelect","value","onChange","children","onFieldChange","e","target","renderQuery","createFormValue","CreateFormValuesForm","render","console","log","props","values","handleSubmit","selector","state","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport { compose } from 'redux';\nimport { reduxForm, Field, FieldArray, formValueSelector } from 'redux-form';\nimport { connect } from 'react-redux';\n\nimport { Link } from 'react-router-dom';\n\nimport { withStyles } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport Input from '@material-ui/core/Input';\n\nimport lightGreen from '@material-ui/core/colors/lightGreen';\n\nimport { FormHelperText } from '@material-ui/core';\nimport { FormControl, MenuItem } from '@material-ui/core';\n\nimport Button from '@material-ui/core/Button';\n\nimport { readForm } from '../actions';\n\nimport firebase, { db } from '../../Firebase';\n\nconst styles = theme => ({\n    container: {\n        margin: '0 auto',\n        backgroundColor: lightGreen[50],\n        padding: '2rem 0',\n        width: '100%',\n    },\n    form: {\n        width: '90%',\n        maxWidth: '64rem',\n        display: 'flex',\n        flexDirection: 'column',\n        padding: '0',\n        margin: '0 auto',\n    },\n    contents: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    head: {\n        border: '.1rem solid #eee',\n        backgroundColor: '#fff',\n        borderRadius: '.8rem',\n        padding: '2.2rem 2.2rem 2.4rem',\n    },\n    title: {\n        fontSize: '3.2rem',\n        fontWeight: '500',\n        margin: '.1rem 0',\n    },\n    greed: {\n        fontSize: '1.2rem',\n        marginTop: '1.2rem',\n    },\n    content: {\n        padding: '2.4rem',\n        border: '.1rem solid #eee',\n        borderRadius: '.8rem',\n        backgroundColor: '#fff', \n        margin: '1rem auto',\n        fontSize: '1.6rem',\n    },\n    button: {\n        backgroundColor: '#fff',\n        padding: ' 1rem 2rem',\n        fontSize: '1.4rem',\n\n    },\n});\n\nconst renderTitleField = withStyles(theme => ({\n    form: {\n        width: '100%',\n        height: '6rem',\n        marginTop: '1.6rem',\n    },\n    title: {\n        fontSize: '3.2rem',\n    },\n}))(\n    ({\n        input,\n        meta: { touched, error },\n        type='text',\n        classes,\n        required = false,\n    }) => (\n    <FormControl\n        className={classes.form}\n        required={required}\n        error={!!(touched && error)}\n    >\n        <TextField\n            className={classes.title}\n            error={!!(touched && error)}\n            type={type}\n            required={required}\n            { ...input }\n            helperText={touched && error}\n//            disableUnderline='true'\n            InputProps={{\n                classes: {\n                    input: classes.title,    \n                },\n            }}\n        />\n    </FormControl>\n    )\n)\n\nconst renderInput =  ({\n    input,\n    label,\n    name,\n    meta: { touched, error },\n    type='text',\n    required = false,\n    rootClass = '',\n}) => (\n    <FormControl\n        classes={{root: rootClass}}\n        required={required}\n        error={!!(touched && error)}\n        style={{\n            width: '100%',\n            height: '4rem',\n            marginTop: '1.6rem',\n        }}\n    >\n        <Input\n            style={{\n                fontSize: '1.4rem',\n            }}\n            placeholder={label}\n            label={label}\n            name={name}\n            type={type}\n            { ...input }\n        />\n        {touched && error && <FormHelperText>{error}</FormHelperText>}\n    </FormControl>\n)\n\nconst renderInputDisabled =  ({\n    input,\n    label,\n    name,\n    meta: { touched, error },\n    type='text',\n    required = false,\n    rootClass = '',\n}) => (\n    <FormControl\n        classes={{root: rootClass}}\n        required={required}\n        error={!!(touched && error)}\n        style={{\n            width: '100%',\n            height: '4rem',\n            marginTop: '1.6rem',\n        }}\n    >\n        <Input\n            style={{\n                fontSize: '1.4rem',\n            }}\n            disabled\n            name={name}\n            placeholder={label}\n            label={label}\n            type={type}\n            { ...input }\n        />\n        {touched && error && <FormHelperText>{error}</FormHelperText>}\n    </FormControl>\n)\n\nconst renderChoices = withStyles(theme => ({\n    choices: {\n        listStyle: 'none',\n        display: 'flex',\n    },\n}))(\n    ({\n        classes,\n        fields,\n        meta: { error }\n    }) => (\n        <ul style={{width: '100%', padding: '0'}}>\n            <li style={{listStyle: 'none'}}>\n                <Button\n                    className={classes.button}\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    onClick={() => fields.push()}\n                >\n                    追加\n                </Button>\n            </li>\n            {fields.map((name, index) => (\n                <li key={index} className={classes.choices}>\n                    <div style={{lineHeight: '4rem', margin: '1.2rem 1rem 0 0'}}>○</div>\n                    <Field\n                        name={name}\n                        type=\"text\"\n                        component={renderInput}\n                        label={`Choice #${index + 1}`}\n                    />\n                    <Button\n                        className={classes.button}\n                        style={{margin: '1rem .5rem'}}\n                        variant=\"outlined\"\n                        color=\"primary\"\n                        onClick={() => fields.remove(index)}\n                    >\n                        削除\n                    </Button>\n                </li>\n            ))}\n            {error && <li>{error}</li>}\n        </ul>\n    )\n)\n\nconst renderRadioQuery = withStyles(theme => ({\n    content: {\n        padding: '2.4rem',\n        border: '.1rem solid #eee',\n        borderRadius: '.8rem',\n        backgroundColor: '#fff', \n        margin: '1rem auto',\n        fontSize: '1.6rem',\n        width: 'calc(100% - 4.8rem)',\n    },\n    choices: {\n        display: 'flex',\n    },\n}))( \n    ({\n        classes,\n        rootClass = '',\n        index,\n    }) => (\n        <FormControl classs={{root: rootClass}}>\n            <div className={classes.content}>\n                <Field\n                    component={renderInput}\n                    name={`createForm.${index}.question`}\n                    label='質問'\n                />\n                <FieldArray name={`createForm.${index}.choices`} component={renderChoices} />\n            </div>\n    </FormControl>\n    )\n)\n\nconst renderTextQuery = withStyles(theme => ({\n    content: {\n        padding: '2.4rem',\n        border: '.1rem solid #eee',\n        borderRadius: '.8rem',\n        backgroundColor: '#fff', \n        margin: '1rem auto',\n        fontSize: '1.6rem',\n        width: 'calc(100% - 4.8rem)',\n    },\n}))(\n    ({\n        classes,\n        rootClass = '',\n        index,\n    }) => (\n        <FormControl classes={{root: rootClass}}>\n            <div className={classes.content}>\n                <Field\n                    component={renderInput}\n                    name={`createForm.${index}.question`}\n                />\n                <Field\n                    component={renderInputDisabled}\n                    name={`createForm.${index}.answer`}\n                    label={`回答(記述式)`}\n                />\n            </div>\n        </FormControl>\n    )\n)\n\nconst renderTypeSelect = ({\n    input: { value, onChange },\n    label,\n    children,\n    meta: { touched, error },\n    onFieldChange,\n    required = false,\n    rootClass = '',\n}) => (\n    <TextField\n        required={required}\n        classes={{root: rootClass}}\n        select\n        label={label}\n        variant='outlined'\n        value={value}\n        onChange={e => {\n        onChange(e.target.value)\n        onFieldChange && onFieldChange(e.target.value)\n        }}\n        helperText={touched && error}\n    >\n       {children}\n    </TextField>\n)\n\nconst renderQuery = withStyles(theme => ({\n    content: {\n        padding: '2.4rem',\n        border: '.1rem solid #eee',\n        borderRadius: '.8rem',\n        backgroundColor: '#fff',\n        margin: '1rem auto',\n        fontSize: '1.6rem',\n        width: 'calc(100% - 4.8rem)',\n    },\n}))(\n    ({\n        fields,\n        classes,\n        rootClass = '',\n        createFormValue,\n    }) => (\n        <FormControl classes={{root: rootClass}}>\n            {fields.map((name, index) => {\n                return (\n                    <div key={index} className={classes.content}>\n                        <Field name={`createForm.${index}.type`} component={renderTypeSelect}>\n                            <MenuItem value=''>未選択</MenuItem>\n                            <MenuItem value='text_query'>テキスト</MenuItem>\n                            <MenuItem value='radio_query'>ラジオ</MenuItem>\n                        </Field>\n                        {createFormValue[index].type === 'text_query' && (\n                            <Field name={`createForm.${index}.question`} index={index} component={renderTextQuery} />\n                        )}\n                        {createFormValue[index].type === 'radio_query' && (\n                            <Field name={`createForm.${index}.question`} index={index} component={renderRadioQuery} />\n                        )}\n                        <Button onClick={() => fields.remove(index)}>削除</Button>\n                    </div>\n                )\n            })}\n            <div>\n                <Button\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    style={{backgroundColor: '#fff'}}\n                    onClick={() => fields.push({})}\n                >\n                    質問を追加\n                </Button>\n            </div>\n        </FormControl>\n    )\n)\n\nclass CreateFormValuesForm extends Component {\n    render() {\n        console.log(this.props.values)\n        const { classes, fields, handleSubmit, createFormValue } = this.props;\n        return (\n            <div className={classes.container}>\n                <div className={classes.form}>\n                    <form className={classes.contents}>\n                        <div className={classes.head}>\n                            <Field label=\"タイトル\" name=\"title\" type=\"text\" component={renderTitleField} />\n                        </div>\n                        <Link to='/create_form'>戻る</Link>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nCreateFormValuesForm = reduxForm({\n    form: 'createFormValues'\n})(CreateFormValuesForm)\n\nconst selector = formValueSelector('createFormValues')\nCreateFormValuesForm = connect(state => {\n    const createFormValue = selector(state, 'createForm')\n    return {\n        createFormValue,\n    }\n})(CreateFormValuesForm)\n\nconst mapStateToProps = state => ({values: state.values})\nconst mapDispatchToProps = ({ readForm })\n\nexport default compose(\n    withStyles(styles),\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )\n)(CreateFormValuesForm)\n"]},"metadata":{},"sourceType":"module"}